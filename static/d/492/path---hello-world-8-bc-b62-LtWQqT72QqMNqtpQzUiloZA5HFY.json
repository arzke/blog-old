{"data":{"site":{"siteMetadata":{"title":"Blog","author":"Bruno Arsene"}},"markdownRemark":{"id":"17329af4-16dd-56a7-8af8-d5b6fa6dd9c8","excerpt":"Examples can be confusing, especially when we assume they’re following some kind of best practices \nand that we can blindly rely on them.\nBut we must keep in…","html":"<p>Examples can be confusing, especially when we assume they’re following some kind of best practices\nand that we can blindly rely on them.\nBut we must keep in mind that code samples are just minimal setup to achieve a specific goal, and nothing else.\nIt is not intended to be clean code but rather to be\nclear enough to demonstrate the purpose it serves.</p>\n<p>Therefore, relying too much on examples as the right way to do something\nis not relevant. One good illustration of this is how people usually name event handlers\nin react. Here is a piece of code <a href=\"https://reactjs.org/docs/handling-events.html\">you might be familiar with</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">handleClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// This function does something</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">FooComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Foo</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The name of the component and the label of the button have been\ndeliberately set to </p>\n<h2>So what is wrong with this example?</h2>\n<p>The problem here is about the naming of the event handler. <strong>It doesn’t reveal anything about what the function does</strong>.\nInstead, it tells us how it is used.</p>\n<p>If, like me, you enjoyed reading Uncle Bob’s Clean Code, you will probably remember this:</p>\n<blockquote>\n<p>Write explicit code – naming variables and methods can reveal the entire intent of the code</p>\n</blockquote>\n<p>Moreover, we’re tightly coupling the function to its caller, meaning that\nif we decide to perform the same action on a different event, we have to\nrename the function. This would make no sense as the body of the function hasn’t changed.</p>\n<h2>The solution</h2>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">clearForm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// This function does something</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">MySuperComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>clearForm<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Foo</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"How to name your event handlers in React","date":"March 13, 2019","description":"There might be a better naming than handleClick"}}},"pageContext":{"slug":"/hello-world/","previous":null,"next":null}}