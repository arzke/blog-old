{"data":{"site":{"siteMetadata":{"title":"Blog","author":"Bruno Arsene"}},"markdownRemark":{"id":"17329af4-16dd-56a7-8af8-d5b6fa6dd9c8","excerpt":"Examples can be confusing, especially when we assume they’re following some kind of best practices.\nBut we must keep in mind that code samples are just minimal…","html":"<p>Examples can be confusing, especially when we assume they’re following some kind of best practices.\nBut we must keep in mind that code samples are just minimal setup to achieve a specific goal, and nothing else.\nIt is not intended to be clean code but rather to be\nclear enough to demonstrate the purpose it serves.</p>\n<p>Therefore, relying too much on examples as the right way to do something\nis not relevant. One good illustration of this is how the event handlers are named\nin react. Here is a piece of code you will be familiar with:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>Button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleClick<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Save<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span></code></pre></div>","frontmatter":{"title":"How to name event handlers in React","date":"March 13, 2019","description":"There might be a better naming than handleClick"}}},"pageContext":{"slug":"/hello-world/","previous":null,"next":null}}